(()=>{var __webpack_modules__={562:function(e,t,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,t,r,i){void 0===i&&(i=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,i,n)}:function(e,t,r,i){void 0===i&&(i=r),e[i]=t[r]}),n=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||i(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),t.sdk=t.MixinDeviceBase=t.ScryptedDeviceBase=void 0,n(r(192),t);const s=r(192);r(339);class a extends s.DeviceBase{constructor(e){super(),this.nativeId=e}get storage(){return this._storage||(this._storage=t.sdk.deviceManager.getDeviceStorage(this.nativeId)),this._storage}get log(){return this._log||(this._log=t.sdk.deviceManager.getDeviceLogger(this.nativeId)),this._log}get console(){return this._console||(this._console=t.sdk.deviceManager.getDeviceConsole(this.nativeId)),this._console}async createMediaObject(e,r){return t.sdk.mediaManager.createMediaObject(e,r,{sourceId:this.id})}getMediaObjectConsole(e){return"string"!=typeof e.sourceId?this.console:t.sdk.deviceManager.getMixinConsole(e.sourceId,this.nativeId)}_lazyLoadDeviceState(){this._deviceState||(this.nativeId?this._deviceState=t.sdk.deviceManager.getDeviceState(this.nativeId):this._deviceState=t.sdk.deviceManager.getDeviceState())}onDeviceEvent(e,r){return t.sdk.deviceManager.onDeviceEvent(this.nativeId,e,r)}}t.ScryptedDeviceBase=a;class o extends s.DeviceBase{constructor(e){super(),this._listeners=new Set,this.mixinDevice=e.mixinDevice,this.mixinDeviceInterfaces=e.mixinDeviceInterfaces,this.mixinStorageSuffix=e.mixinStorageSuffix,this._deviceState=e.mixinDeviceState,this.nativeId=t.sdk.systemManager.getDeviceById(this.id).nativeId,this.mixinProviderNativeId=e.mixinProviderNativeId,this._deviceState.__rpcproxy_traps_all_properties&&"string"==typeof this._deviceState.id&&(this._deviceState=t.sdk.deviceManager.createDeviceState(this._deviceState.id,this._deviceState.setState))}get storage(){if(!this._storage){const e=this.mixinStorageSuffix,r=this.id+(e?":"+e:"");this._storage=t.sdk.deviceManager.getMixinStorage(r,this.mixinProviderNativeId)}return this._storage}get console(){return this._console||(t.sdk.deviceManager.getMixinConsole?this._console=t.sdk.deviceManager.getMixinConsole(this.id,this.mixinProviderNativeId):this._console=t.sdk.deviceManager.getDeviceConsole(this.mixinProviderNativeId)),this._console}async createMediaObject(e,r){return t.sdk.mediaManager.createMediaObject(e,r,{sourceId:this.id})}getMediaObjectConsole(e){return"string"!=typeof e.sourceId?this.console:t.sdk.deviceManager.getMixinConsole(e.sourceId,this.mixinProviderNativeId)}onDeviceEvent(e,r){return t.sdk.deviceManager.onMixinEvent(this.id,this,e,r)}_lazyLoadDeviceState(){}manageListener(e){this._listeners.add(e)}release(){for(const e of this._listeners)e.removeListener()}}t.MixinDeviceBase=o,function(){function e(e){return function(){return this._lazyLoadDeviceState(),this._deviceState?.[e]}}function t(e){return function(t){this._lazyLoadDeviceState(),this._deviceState?this._deviceState[e]=t:console.warn("device state is unavailable. the device must be discovered with deviceManager.onDeviceDiscovered or deviceManager.onDevicesChanged before the state can be set.")}}for(const r of Object.values(s.ScryptedInterfaceProperty))r!==s.ScryptedInterfaceProperty.nativeId&&(Object.defineProperty(a.prototype,r,{set:t(r),get:e(r)}),Object.defineProperty(o.prototype,r,{set:t(r),get:e(r)}))}(),t.sdk={};try{let e=!1;try{process.env.SCRYPTED_SDK_ES_MODULE||process.env.SCRYPTED_SDK_MODULE;const i=process.env.SCRYPTED_SDK_CJS_MODULE||process.env.SCRYPTED_SDK_MODULE;if(i)if("undefined"!=typeof require){const r=require(process.env.SCRYPTED_SDK_MODULE);Object.assign(t.sdk,r.getScryptedStatic()),e=!0}else{const n=r(891)(i);Object.assign(t.sdk,n.getScryptedStatic()),e=!0}}catch(e){throw console.warn("failed to load sdk module",e),e}if(!e){let e;try{e=pluginRuntimeAPI}catch(e){}Object.assign(t.sdk,{log:deviceManager.getDeviceLogger(void 0),deviceManager,endpointManager,mediaManager,systemManager,pluginHostAPI,...e})}try{t.sdk.systemManager.setScryptedInterfaceDescriptors?.(s.TYPES_VERSION,s.ScryptedInterfaceDescriptors)?.catch((()=>{}))}catch(e){}}catch(e){console.error("sdk initialization error, import @scrypted/types or use @scrypted/client instead",e)}t.default=t.sdk},673:function(e,t,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,t,r,i){void 0===i&&(i=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,i,n)}:function(e,t,r,i){void 0===i&&(i=r),e[i]=t[r]}),n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&i(t,e,r);return n(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.SettingsMixinDeviceBase=void 0;const a=s(r(562)),{deviceManager:o}=a.default;class c extends a.MixinDeviceBase{constructor(e){super(e),this.settingsGroup=e.group,this.settingsGroupKey=e.groupKey,process.nextTick((()=>o.onMixinEvent(this.id,this,a.ScryptedInterface.Settings,null)))}async getSettings(){const e=this.mixinDeviceInterfaces.includes(a.ScryptedInterface.Settings)?this.mixinDevice.getSettings():void 0,t=this.getMixinSettings(),r=[];try{const t=await e||[];r.push(...t)}catch(e){const t=this.name,i=`${t} Extension settings failed to load.`;this.console.error(i,e),r.push({key:Math.random().toString(),title:t,value:"Settings Error",group:"Errors",description:i,readonly:!0})}try{const e=await t||[];for(const t of e)t.group=t.group||this.settingsGroup,t.key=this.settingsGroupKey+":"+t.key;r.push(...e)}catch(e){const t=o.getDeviceState(this.mixinProviderNativeId).name,i=`${t} Extension settings failed to load.`;this.console.error(i,e),r.push({key:Math.random().toString(),title:t,value:"Settings Error",group:"Errors",description:i,readonly:!0})}return r}async putSetting(e,t){const r=this.settingsGroupKey+":";if(!e?.startsWith(r))return this.mixinDevice.putSetting(e,t);await this.putMixinSetting(e.substring(r.length),t)||o.onMixinEvent(this.id,this,a.ScryptedInterface.Settings,null)}async release(){await o.onMixinEvent(this.id,this,a.ScryptedInterface.Settings,null)}}t.SettingsMixinDeviceBase=c},117:function(e,t,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,t,r,i){void 0===i&&(i=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,i,n)}:function(e,t,r,i){void 0===i&&(i=r),e[i]=t[r]}),n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&i(t,e,r);return n(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.StorageSettings=void 0;const a=s(r(562)),{systemManager:o}=a.default;t.StorageSettings=class{constructor(e,t){this.device=e,this.settings=t,this.values={},this.hasValue={};for(const e of Object.keys(t)){const r=t[e],i=()=>this.getItem(e);let n;n="clippath"!==r.type?i:()=>{try{return JSON.parse(i())}catch(e){}},Object.defineProperty(this.values,e,{get:n,set:t=>this.putSetting(e,t),enumerable:!0}),Object.defineProperty(this.hasValue,e,{get:()=>null!=this.device.storage.getItem(e),enumerable:!0})}}get keys(){const e={};for(const t of Object.keys(this.settings))e[t]=t;return e}async getSettings(){const e=await(this.options?.onGet?.()),t=[];for(const[r,i]of Object.entries(this.settings)){let n=Object.assign({},i);e?.[r]&&(n=Object.assign(n,e[r])),n.onGet&&(n=Object.assign(n,await n.onGet())),n.hide||await(this.options?.hide?.[r]?.())||(n.key=r,n.value=this.getItemInternal(r,n,!0),"function"==typeof n.deviceFilter&&(n.deviceFilter=n.deviceFilter.toString()),t.push(n),delete n.onPut,delete n.onGet,delete n.mapPut,delete n.mapGet)}return t}async putSetting(e,t){const r=this.settings[e];let i;return r&&(i=this.getItemInternal(e,r)),this.putSettingInternal(r,i,e,t)}putSettingInternal(e,t,r,i){e?.noStore||(e?.mapPut&&(i=e.mapPut(t,i)),null==i?this.device.storage.removeItem(r):"object"==typeof i?this.device.storage.setItem(r,JSON.stringify(i)):this.device.storage.setItem(r,i?.toString())),e?.onPut?.(t,i),e?.hide||this.device.onDeviceEvent(a.ScryptedInterface.Settings,void 0)}getItemInternal(e,t,r){if(!t)return this.device.storage.getItem(e);const i=function(e,t,r,i){if(null==e)return r();const n=t.multiple?"array":t.type;if("boolean"===n)return"true"===e||"false"!==e&&(r()||!1);if("number"===n){const t=parseFloat(e);return isNaN(t)?r()||0:t}if("integer"===n){const t=parseInt(e);return isNaN(t)?r()||0:t}if("array"===n){if(!e)return r()||[];try{return JSON.parse(e)}catch(e){return r()||[]}}if("device"===n)return i?e:o.getDeviceById(e)||o.getDeviceById(r());if(e&&t.json)try{return JSON.parse(e)}catch(e){return r()}return e||r()}(this.device.storage.getItem(e),t,(()=>null!=t.persistedDefaultValue?(this.putSettingInternal(t,void 0,e,t.persistedDefaultValue),t.persistedDefaultValue):t.defaultValue),r);return t.mapGet?t.mapGet(i):i}getItem(e){return this.getItemInternal(e,this.settings[e])}}},891:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=891,e.exports=t},192:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ScryptedMimeTypes=t.ScryptedInterface=t.MediaPlayerState=t.SecuritySystemObstruction=t.SecuritySystemMode=t.AirQuality=t.AirPurifierMode=t.AirPurifierStatus=t.ChargeState=t.LockState=t.PanTiltZoomMovement=t.ThermostatMode=t.TemperatureUnit=t.FanMode=t.HumidityMode=t.ScryptedDeviceType=t.ScryptedInterfaceDescriptors=t.ScryptedInterfaceMethod=t.ScryptedInterfaceProperty=t.DeviceBase=t.TYPES_VERSION=void 0,t.TYPES_VERSION="0.3.108";var r,i,n,s,a,o,c,u,d,p,l,g,m,y,S,v,h,f;t.DeviceBase=class{},function(e){e.id="id",e.info="info",e.interfaces="interfaces",e.mixins="mixins",e.name="name",e.nativeId="nativeId",e.pluginId="pluginId",e.providedInterfaces="providedInterfaces",e.providedName="providedName",e.providedRoom="providedRoom",e.providedType="providedType",e.providerId="providerId",e.room="room",e.type="type",e.scryptedRuntimeArguments="scryptedRuntimeArguments",e.on="on",e.brightness="brightness",e.colorTemperature="colorTemperature",e.rgb="rgb",e.hsv="hsv",e.buttons="buttons",e.sensors="sensors",e.running="running",e.paused="paused",e.docked="docked",e.temperatureSetting="temperatureSetting",e.temperature="temperature",e.temperatureUnit="temperatureUnit",e.humidity="humidity",e.audioVolumes="audioVolumes",e.recordingActive="recordingActive",e.ptzCapabilities="ptzCapabilities",e.lockState="lockState",e.entryOpen="entryOpen",e.batteryLevel="batteryLevel",e.chargeState="chargeState",e.online="online",e.fromMimeType="fromMimeType",e.toMimeType="toMimeType",e.converters="converters",e.binaryState="binaryState",e.tampered="tampered",e.sleeping="sleeping",e.powerDetected="powerDetected",e.audioDetected="audioDetected",e.motionDetected="motionDetected",e.ambientLight="ambientLight",e.occupied="occupied",e.flooded="flooded",e.ultraviolet="ultraviolet",e.luminance="luminance",e.position="position",e.securitySystemState="securitySystemState",e.pm10Density="pm10Density",e.pm25Density="pm25Density",e.vocDensity="vocDensity",e.noxDensity="noxDensity",e.co2ppm="co2ppm",e.airQuality="airQuality",e.airPurifierState="airPurifierState",e.filterChangeIndication="filterChangeIndication",e.filterLifeLevel="filterLifeLevel",e.humiditySetting="humiditySetting",e.fan="fan",e.applicationInfo="applicationInfo",e.systemDevice="systemDevice"}(r||(t.ScryptedInterfaceProperty=r={})),function(e){e.listen="listen",e.probe="probe",e.setMixins="setMixins",e.setName="setName",e.setRoom="setRoom",e.setType="setType",e.getPluginJson="getPluginJson",e.turnOff="turnOff",e.turnOn="turnOn",e.setBrightness="setBrightness",e.getTemperatureMaxK="getTemperatureMaxK",e.getTemperatureMinK="getTemperatureMinK",e.setColorTemperature="setColorTemperature",e.setRgb="setRgb",e.setHsv="setHsv",e.pressButton="pressButton",e.sendNotification="sendNotification",e.start="start",e.stop="stop",e.pause="pause",e.resume="resume",e.dock="dock",e.setTemperature="setTemperature",e.setTemperatureUnit="setTemperatureUnit",e.getPictureOptions="getPictureOptions",e.takePicture="takePicture",e.getAudioStream="getAudioStream",e.setAudioVolumes="setAudioVolumes",e.startDisplay="startDisplay",e.stopDisplay="stopDisplay",e.getVideoStream="getVideoStream",e.getVideoStreamOptions="getVideoStreamOptions",e.getPrivacyMasks="getPrivacyMasks",e.setPrivacyMasks="setPrivacyMasks",e.getVideoTextOverlays="getVideoTextOverlays",e.setVideoTextOverlay="setVideoTextOverlay",e.getRecordingStream="getRecordingStream",e.getRecordingStreamCurrentTime="getRecordingStreamCurrentTime",e.getRecordingStreamOptions="getRecordingStreamOptions",e.getRecordingStreamThumbnail="getRecordingStreamThumbnail",e.deleteRecordingStream="deleteRecordingStream",e.setRecordingActive="setRecordingActive",e.ptzCommand="ptzCommand",e.getRecordedEvents="getRecordedEvents",e.getVideoClip="getVideoClip",e.getVideoClips="getVideoClips",e.getVideoClipThumbnail="getVideoClipThumbnail",e.removeVideoClips="removeVideoClips",e.setVideoStreamOptions="setVideoStreamOptions",e.startIntercom="startIntercom",e.stopIntercom="stopIntercom",e.lock="lock",e.unlock="unlock",e.addPassword="addPassword",e.getPasswords="getPasswords",e.removePassword="removePassword",e.activate="activate",e.deactivate="deactivate",e.isReversible="isReversible",e.closeEntry="closeEntry",e.openEntry="openEntry",e.getDevice="getDevice",e.releaseDevice="releaseDevice",e.adoptDevice="adoptDevice",e.discoverDevices="discoverDevices",e.createDevice="createDevice",e.getCreateDeviceSettings="getCreateDeviceSettings",e.reboot="reboot",e.getRefreshFrequency="getRefreshFrequency",e.refresh="refresh",e.getMediaStatus="getMediaStatus",e.load="load",e.seek="seek",e.skipNext="skipNext",e.skipPrevious="skipPrevious",e.convert="convert",e.convertMedia="convertMedia",e.getSettings="getSettings",e.putSetting="putSetting",e.armSecuritySystem="armSecuritySystem",e.disarmSecuritySystem="disarmSecuritySystem",e.setAirPurifierState="setAirPurifierState",e.getReadmeMarkdown="getReadmeMarkdown",e.getOauthUrl="getOauthUrl",e.onOauthCallback="onOauthCallback",e.canMixin="canMixin",e.getMixin="getMixin",e.releaseMixin="releaseMixin",e.onRequest="onRequest",e.onConnection="onConnection",e.onPush="onPush",e.run="run",e.eval="eval",e.loadScripts="loadScripts",e.saveScript="saveScript",e.forkInterface="forkInterface",e.trackObjects="trackObjects",e.getDetectionInput="getDetectionInput",e.getObjectTypes="getObjectTypes",e.detectObjects="detectObjects",e.generateObjectDetections="generateObjectDetections",e.getDetectionModel="getDetectionModel",e.setHumidity="setHumidity",e.setFan="setFan",e.startRTCSignalingSession="startRTCSignalingSession",e.createRTCSignalingSession="createRTCSignalingSession",e.getScryptedUserAccessControl="getScryptedUserAccessControl",e.generateVideoFrames="generateVideoFrames",e.connectStream="connectStream",e.getTTYSettings="getTTYSettings"}(i||(t.ScryptedInterfaceMethod=i={})),t.ScryptedInterfaceDescriptors={ScryptedDevice:{name:"ScryptedDevice",methods:["listen","probe","setMixins","setName","setRoom","setType"],properties:["id","info","interfaces","mixins","name","nativeId","pluginId","providedInterfaces","providedName","providedRoom","providedType","providerId","room","type"]},ScryptedPlugin:{name:"ScryptedPlugin",methods:["getPluginJson"],properties:[]},ScryptedPluginRuntime:{name:"ScryptedPluginRuntime",methods:[],properties:["scryptedRuntimeArguments"]},OnOff:{name:"OnOff",methods:["turnOff","turnOn"],properties:["on"]},Brightness:{name:"Brightness",methods:["setBrightness"],properties:["brightness"]},ColorSettingTemperature:{name:"ColorSettingTemperature",methods:["getTemperatureMaxK","getTemperatureMinK","setColorTemperature"],properties:["colorTemperature"]},ColorSettingRgb:{name:"ColorSettingRgb",methods:["setRgb"],properties:["rgb"]},ColorSettingHsv:{name:"ColorSettingHsv",methods:["setHsv"],properties:["hsv"]},Buttons:{name:"Buttons",methods:[],properties:["buttons"]},PressButtons:{name:"PressButtons",methods:["pressButton"],properties:[]},Sensors:{name:"Sensors",methods:[],properties:["sensors"]},Notifier:{name:"Notifier",methods:["sendNotification"],properties:[]},StartStop:{name:"StartStop",methods:["start","stop"],properties:["running"]},Pause:{name:"Pause",methods:["pause","resume"],properties:["paused"]},Dock:{name:"Dock",methods:["dock"],properties:["docked"]},TemperatureSetting:{name:"TemperatureSetting",methods:["setTemperature"],properties:["temperatureSetting"]},Thermometer:{name:"Thermometer",methods:["setTemperatureUnit"],properties:["temperature","temperatureUnit"]},HumiditySensor:{name:"HumiditySensor",methods:[],properties:["humidity"]},Camera:{name:"Camera",methods:["getPictureOptions","takePicture"],properties:[]},Microphone:{name:"Microphone",methods:["getAudioStream"],properties:[]},AudioVolumeControl:{name:"AudioVolumeControl",methods:["setAudioVolumes"],properties:["audioVolumes"]},Display:{name:"Display",methods:["startDisplay","stopDisplay"],properties:[]},VideoCamera:{name:"VideoCamera",methods:["getVideoStream","getVideoStreamOptions"],properties:[]},VideoCameraMask:{name:"VideoCameraMask",methods:["getPrivacyMasks","setPrivacyMasks"],properties:[]},VideoTextOverlays:{name:"VideoTextOverlays",methods:["getVideoTextOverlays","setVideoTextOverlay"],properties:[]},VideoRecorder:{name:"VideoRecorder",methods:["getRecordingStream","getRecordingStreamCurrentTime","getRecordingStreamOptions","getRecordingStreamThumbnail"],properties:["recordingActive"]},VideoRecorderManagement:{name:"VideoRecorderManagement",methods:["deleteRecordingStream","setRecordingActive"],properties:[]},PanTiltZoom:{name:"PanTiltZoom",methods:["ptzCommand"],properties:["ptzCapabilities"]},EventRecorder:{name:"EventRecorder",methods:["getRecordedEvents"],properties:[]},VideoClips:{name:"VideoClips",methods:["getVideoClip","getVideoClips","getVideoClipThumbnail","removeVideoClips"],properties:[]},VideoCameraConfiguration:{name:"VideoCameraConfiguration",methods:["setVideoStreamOptions"],properties:[]},Intercom:{name:"Intercom",methods:["startIntercom","stopIntercom"],properties:[]},Lock:{name:"Lock",methods:["lock","unlock"],properties:["lockState"]},PasswordStore:{name:"PasswordStore",methods:["addPassword","getPasswords","removePassword"],properties:[]},Scene:{name:"Scene",methods:["activate","deactivate","isReversible"],properties:[]},Entry:{name:"Entry",methods:["closeEntry","openEntry"],properties:[]},EntrySensor:{name:"EntrySensor",methods:[],properties:["entryOpen"]},DeviceProvider:{name:"DeviceProvider",methods:["getDevice","releaseDevice"],properties:[]},DeviceDiscovery:{name:"DeviceDiscovery",methods:["adoptDevice","discoverDevices"],properties:[]},DeviceCreator:{name:"DeviceCreator",methods:["createDevice","getCreateDeviceSettings"],properties:[]},Battery:{name:"Battery",methods:[],properties:["batteryLevel"]},Charger:{name:"Charger",methods:[],properties:["chargeState"]},Reboot:{name:"Reboot",methods:["reboot"],properties:[]},Refresh:{name:"Refresh",methods:["getRefreshFrequency","refresh"],properties:[]},MediaPlayer:{name:"MediaPlayer",methods:["getMediaStatus","load","seek","skipNext","skipPrevious"],properties:[]},Online:{name:"Online",methods:[],properties:["online"]},BufferConverter:{name:"BufferConverter",methods:["convert"],properties:["fromMimeType","toMimeType"]},MediaConverter:{name:"MediaConverter",methods:["convertMedia"],properties:["converters"]},Settings:{name:"Settings",methods:["getSettings","putSetting"],properties:[]},BinarySensor:{name:"BinarySensor",methods:[],properties:["binaryState"]},TamperSensor:{name:"TamperSensor",methods:[],properties:["tampered"]},Sleep:{name:"Sleep",methods:[],properties:["sleeping"]},PowerSensor:{name:"PowerSensor",methods:[],properties:["powerDetected"]},AudioSensor:{name:"AudioSensor",methods:[],properties:["audioDetected"]},MotionSensor:{name:"MotionSensor",methods:[],properties:["motionDetected"]},AmbientLightSensor:{name:"AmbientLightSensor",methods:[],properties:["ambientLight"]},OccupancySensor:{name:"OccupancySensor",methods:[],properties:["occupied"]},FloodSensor:{name:"FloodSensor",methods:[],properties:["flooded"]},UltravioletSensor:{name:"UltravioletSensor",methods:[],properties:["ultraviolet"]},LuminanceSensor:{name:"LuminanceSensor",methods:[],properties:["luminance"]},PositionSensor:{name:"PositionSensor",methods:[],properties:["position"]},SecuritySystem:{name:"SecuritySystem",methods:["armSecuritySystem","disarmSecuritySystem"],properties:["securitySystemState"]},PM10Sensor:{name:"PM10Sensor",methods:[],properties:["pm10Density"]},PM25Sensor:{name:"PM25Sensor",methods:[],properties:["pm25Density"]},VOCSensor:{name:"VOCSensor",methods:[],properties:["vocDensity"]},NOXSensor:{name:"NOXSensor",methods:[],properties:["noxDensity"]},CO2Sensor:{name:"CO2Sensor",methods:[],properties:["co2ppm"]},AirQualitySensor:{name:"AirQualitySensor",methods:[],properties:["airQuality"]},AirPurifier:{name:"AirPurifier",methods:["setAirPurifierState"],properties:["airPurifierState"]},FilterMaintenance:{name:"FilterMaintenance",methods:[],properties:["filterChangeIndication","filterLifeLevel"]},Readme:{name:"Readme",methods:["getReadmeMarkdown"],properties:[]},OauthClient:{name:"OauthClient",methods:["getOauthUrl","onOauthCallback"],properties:[]},MixinProvider:{name:"MixinProvider",methods:["canMixin","getMixin","releaseMixin"],properties:[]},HttpRequestHandler:{name:"HttpRequestHandler",methods:["onRequest"],properties:[]},EngineIOHandler:{name:"EngineIOHandler",methods:["onConnection"],properties:[]},PushHandler:{name:"PushHandler",methods:["onPush"],properties:[]},Program:{name:"Program",methods:["run"],properties:[]},Scriptable:{name:"Scriptable",methods:["eval","loadScripts","saveScript"],properties:[]},ClusterForkInterface:{name:"ClusterForkInterface",methods:["forkInterface"],properties:[]},ObjectTracker:{name:"ObjectTracker",methods:["trackObjects"],properties:[]},ObjectDetector:{name:"ObjectDetector",methods:["getDetectionInput","getObjectTypes"],properties:[]},ObjectDetection:{name:"ObjectDetection",methods:["detectObjects","generateObjectDetections","getDetectionModel"],properties:[]},ObjectDetectionPreview:{name:"ObjectDetectionPreview",methods:[],properties:[]},ObjectDetectionGenerator:{name:"ObjectDetectionGenerator",methods:[],properties:[]},HumiditySetting:{name:"HumiditySetting",methods:["setHumidity"],properties:["humiditySetting"]},Fan:{name:"Fan",methods:["setFan"],properties:["fan"]},RTCSignalingChannel:{name:"RTCSignalingChannel",methods:["startRTCSignalingSession"],properties:[]},RTCSignalingClient:{name:"RTCSignalingClient",methods:["createRTCSignalingSession"],properties:[]},LauncherApplication:{name:"LauncherApplication",methods:[],properties:["applicationInfo"]},ScryptedUser:{name:"ScryptedUser",methods:["getScryptedUserAccessControl"],properties:[]},VideoFrameGenerator:{name:"VideoFrameGenerator",methods:["generateVideoFrames"],properties:[]},StreamService:{name:"StreamService",methods:["connectStream"],properties:[]},TTY:{name:"TTY",methods:[],properties:[]},TTYSettings:{name:"TTYSettings",methods:["getTTYSettings"],properties:[]},ScryptedSystemDevice:{name:"ScryptedSystemDevice",methods:[],properties:["systemDevice"]},ScryptedDeviceCreator:{name:"ScryptedDeviceCreator",methods:[],properties:[]},ScryptedSettings:{name:"ScryptedSettings",methods:[],properties:[]}},function(e){e.Builtin="Builtin",e.Camera="Camera",e.Fan="Fan",e.Light="Light",e.Switch="Switch",e.Outlet="Outlet",e.Sensor="Sensor",e.Scene="Scene",e.Program="Program",e.Automation="Automation",e.Vacuum="Vacuum",e.Notifier="Notifier",e.Thermostat="Thermostat",e.Lock="Lock",e.PasswordControl="PasswordControl",e.Display="Display",e.SmartDisplay="SmartDisplay",e.Speaker="Speaker",e.SmartSpeaker="SmartSpeaker",e.Event="Event",e.Entry="Entry",e.Garage="Garage",e.DeviceProvider="DeviceProvider",e.DataSource="DataSource",e.API="API",e.Doorbell="Doorbell",e.Irrigation="Irrigation",e.Valve="Valve",e.Person="Person",e.SecuritySystem="SecuritySystem",e.WindowCovering="WindowCovering",e.Siren="Siren",e.AirPurifier="AirPurifier",e.Unknown="Unknown"}(n||(t.ScryptedDeviceType=n={})),function(e){e.Humidify="Humidify",e.Dehumidify="Dehumidify",e.Auto="Auto",e.Off="Off"}(s||(t.HumidityMode=s={})),function(e){e.Auto="Auto",e.Manual="Manual"}(a||(t.FanMode=a={})),function(e){e.C="C",e.F="F"}(o||(t.TemperatureUnit=o={})),function(e){e.Off="Off",e.Cool="Cool",e.Heat="Heat",e.HeatCool="HeatCool",e.Auto="Auto",e.FanOnly="FanOnly",e.Purifier="Purifier",e.Eco="Eco",e.Dry="Dry",e.On="On"}(c||(t.ThermostatMode=c={})),function(e){e.Absolute="Absolute",e.Relative="Relative",e.Continuous="Continuous",e.Preset="Preset",e.Home="Home"}(u||(t.PanTiltZoomMovement=u={})),function(e){e.Locked="Locked",e.Unlocked="Unlocked",e.Jammed="Jammed"}(d||(t.LockState=d={})),function(e){e.Trickle="trickle",e.Charging="charging",e.NotCharging="not-charging"}(p||(t.ChargeState=p={})),function(e){e.Inactive="Inactive",e.Idle="Idle",e.Active="Active",e.ActiveNightMode="ActiveNightMode"}(l||(t.AirPurifierStatus=l={})),function(e){e.Manual="Manual",e.Automatic="Automatic"}(g||(t.AirPurifierMode=g={})),function(e){e.Unknown="Unknown",e.Excellent="Excellent",e.Good="Good",e.Fair="Fair",e.Inferior="Inferior",e.Poor="Poor"}(m||(t.AirQuality=m={})),function(e){e.Disarmed="Disarmed",e.HomeArmed="HomeArmed",e.AwayArmed="AwayArmed",e.NightArmed="NightArmed"}(y||(t.SecuritySystemMode=y={})),function(e){e.Sensor="Sensor",e.Occupied="Occupied",e.Time="Time",e.Error="Error"}(S||(t.SecuritySystemObstruction=S={})),function(e){e.Idle="Idle",e.Playing="Playing",e.Paused="Paused",e.Buffering="Buffering"}(v||(t.MediaPlayerState=v={})),function(e){e.ScryptedDevice="ScryptedDevice",e.ScryptedPlugin="ScryptedPlugin",e.ScryptedPluginRuntime="ScryptedPluginRuntime",e.OnOff="OnOff",e.Brightness="Brightness",e.ColorSettingTemperature="ColorSettingTemperature",e.ColorSettingRgb="ColorSettingRgb",e.ColorSettingHsv="ColorSettingHsv",e.Buttons="Buttons",e.PressButtons="PressButtons",e.Sensors="Sensors",e.Notifier="Notifier",e.StartStop="StartStop",e.Pause="Pause",e.Dock="Dock",e.TemperatureSetting="TemperatureSetting",e.Thermometer="Thermometer",e.HumiditySensor="HumiditySensor",e.Camera="Camera",e.Microphone="Microphone",e.AudioVolumeControl="AudioVolumeControl",e.Display="Display",e.VideoCamera="VideoCamera",e.VideoCameraMask="VideoCameraMask",e.VideoTextOverlays="VideoTextOverlays",e.VideoRecorder="VideoRecorder",e.VideoRecorderManagement="VideoRecorderManagement",e.PanTiltZoom="PanTiltZoom",e.EventRecorder="EventRecorder",e.VideoClips="VideoClips",e.VideoCameraConfiguration="VideoCameraConfiguration",e.Intercom="Intercom",e.Lock="Lock",e.PasswordStore="PasswordStore",e.Scene="Scene",e.Entry="Entry",e.EntrySensor="EntrySensor",e.DeviceProvider="DeviceProvider",e.DeviceDiscovery="DeviceDiscovery",e.DeviceCreator="DeviceCreator",e.Battery="Battery",e.Charger="Charger",e.Reboot="Reboot",e.Refresh="Refresh",e.MediaPlayer="MediaPlayer",e.Online="Online",e.BufferConverter="BufferConverter",e.MediaConverter="MediaConverter",e.Settings="Settings",e.BinarySensor="BinarySensor",e.TamperSensor="TamperSensor",e.Sleep="Sleep",e.PowerSensor="PowerSensor",e.AudioSensor="AudioSensor",e.MotionSensor="MotionSensor",e.AmbientLightSensor="AmbientLightSensor",e.OccupancySensor="OccupancySensor",e.FloodSensor="FloodSensor",e.UltravioletSensor="UltravioletSensor",e.LuminanceSensor="LuminanceSensor",e.PositionSensor="PositionSensor",e.SecuritySystem="SecuritySystem",e.PM10Sensor="PM10Sensor",e.PM25Sensor="PM25Sensor",e.VOCSensor="VOCSensor",e.NOXSensor="NOXSensor",e.CO2Sensor="CO2Sensor",e.AirQualitySensor="AirQualitySensor",e.AirPurifier="AirPurifier",e.FilterMaintenance="FilterMaintenance",e.Readme="Readme",e.OauthClient="OauthClient",e.MixinProvider="MixinProvider",e.HttpRequestHandler="HttpRequestHandler",e.EngineIOHandler="EngineIOHandler",e.PushHandler="PushHandler",e.Program="Program",e.Scriptable="Scriptable",e.ClusterForkInterface="ClusterForkInterface",e.ObjectTracker="ObjectTracker",e.ObjectDetector="ObjectDetector",e.ObjectDetection="ObjectDetection",e.ObjectDetectionPreview="ObjectDetectionPreview",e.ObjectDetectionGenerator="ObjectDetectionGenerator",e.HumiditySetting="HumiditySetting",e.Fan="Fan",e.RTCSignalingChannel="RTCSignalingChannel",e.RTCSignalingClient="RTCSignalingClient",e.LauncherApplication="LauncherApplication",e.ScryptedUser="ScryptedUser",e.VideoFrameGenerator="VideoFrameGenerator",e.StreamService="StreamService",e.TTY="TTY",e.TTYSettings="TTYSettings",e.ScryptedSystemDevice="ScryptedSystemDevice",e.ScryptedDeviceCreator="ScryptedDeviceCreator",e.ScryptedSettings="ScryptedSettings"}(h||(t.ScryptedInterface=h={})),function(e){e.Url="text/x-uri",e.InsecureLocalUrl="text/x-insecure-local-uri",e.LocalUrl="text/x-local-uri",e.ServerId="text/x-server-id",e.PushEndpoint="text/x-push-endpoint",e.SchemePrefix="x-scrypted/x-scrypted-scheme-",e.MediaStreamUrl="text/x-media-url",e.MediaObject="x-scrypted/x-scrypted-media-object",e.RequestMediaObject="x-scrypted/x-scrypted-request-media-object",e.RequestMediaStream="x-scrypted/x-scrypted-request-stream",e.MediaStreamFeedback="x-scrypted/x-media-stream-feedback",e.FFmpegInput="x-scrypted/x-ffmpeg-input",e.FFmpegTranscodeStream="x-scrypted/x-ffmpeg-transcode-stream",e.RTCSignalingChannel="x-scrypted/x-scrypted-rtc-signaling-channel",e.RTCSignalingSession="x-scrypted/x-scrypted-rtc-signaling-session",e.RTCConnectionManagement="x-scrypted/x-scrypted-rtc-connection-management",e.Image="x-scrypted/x-scrypted-image"}(f||(t.ScryptedMimeTypes=f={}))},931:(__unused_webpack_module,exports)=>{"use strict";var UnitGroup,Unit;Object.defineProperty(exports,"__esModule",{value:!0}),exports.UnitConverter=exports.Unit=exports.UnitGroup=void 0,function(e){e.None="None",e.Temperature="Temperature",e.Speed="Speed",e.Length="Length",e.Pressure="Pressure"}(UnitGroup||(exports.UnitGroup=UnitGroup={})),function(e){e.NONE="",e.C="°C",e.F="°F",e.M_S="m/s",e.KM_H="km/h",e.MI_H="mph",e.M="m",e.MM="mm",e.KM="km",e.IN="in",e.MI="mi",e.PA="Pa",e.HPA="hPa",e.BAR="bar"}(Unit||(exports.Unit=Unit={}));const siUnitMap={[UnitGroup.None]:Unit.NONE,[UnitGroup.Length]:Unit.M,[UnitGroup.Pressure]:Unit.PA,[UnitGroup.Temperature]:Unit.C,[UnitGroup.Speed]:Unit.M_S};class UnitConverter{static getUnit(e){e||(e=UnitConverter.UNITS_MAP[Unit.NONE]);const t="string"==typeof e?e:e.unit,r=UnitConverter.UNITS_MAP?.[t];return r||{factor:1,unit:t,unitGroup:UnitGroup.None}}static siToLocal(siValue,unit){if(isNaN(siValue))return 0;const unitData=UnitConverter.getUnit(unit);if(!unitData)return siValue;const value=unitData.conversionFormula?eval(unitData.conversionFormula.replaceAll("{fromSi}","true").replaceAll("{value}",String(siValue))):siValue/unitData.factor;return isNaN(value)?0:value}static localToSi(localValue,unit){const unitData=UnitConverter.getUnit(unit);if(!unitData)return localValue;const value=unitData.conversionFormula?eval(unitData.conversionFormula.replaceAll("{fromSi}","false").replaceAll("{value}",String(localValue))):localValue*unitData.factor;return isNaN(value)?0:value}static getUnits(e){const t=UnitConverter.UNITS_MAP[e];if(!t)return[e];const{unitGroup:r}=t;return Object.values(UnitConverter.UNITS_MAP).filter((e=>e.unitGroup===r&&e.unit))?.map((e=>e.unit))}}exports.UnitConverter=UnitConverter,UnitConverter.UNITS_MAP={[Unit.NONE]:{unit:Unit.NONE,unitGroup:UnitGroup.Temperature,factor:1},[Unit.C]:{unit:Unit.C,unitGroup:UnitGroup.Temperature,factor:1},[Unit.F]:{unit:Unit.F,unitGroup:UnitGroup.Temperature,conversionFormula:"{fromSi} ? ({value} * 1.8 + 32) : (({value} - 32) / 1.8)"},[Unit.M_S]:{unit:Unit.M_S,unitGroup:UnitGroup.Speed,factor:1},[Unit.KM_H]:{unit:Unit.KM_H,unitGroup:UnitGroup.Speed,factor:.277777777777778},[Unit.MI_H]:{unit:Unit.MI_H,unitGroup:UnitGroup.Speed,factor:.447038888888889},[Unit.M]:{unit:Unit.M,unitGroup:UnitGroup.Length,factor:1},[Unit.MM]:{unit:Unit.MM,unitGroup:UnitGroup.Length,factor:.001},[Unit.KM]:{unit:Unit.KM,unitGroup:UnitGroup.Length,factor:1e3},[Unit.IN]:{unit:Unit.IN,unitGroup:UnitGroup.Length,factor:.0254},[Unit.MI]:{unit:Unit.MI,unitGroup:UnitGroup.Length,factor:1609.34},[Unit.PA]:{unit:Unit.PA,unitGroup:UnitGroup.Pressure,factor:1},[Unit.HPA]:{unit:Unit.HPA,unitGroup:UnitGroup.Pressure,factor:.01},[Unit.BAR]:{unit:Unit.BAR,unitGroup:UnitGroup.Pressure,factor:1e-5}}},112:function(e,t,r){"use strict";var i,n=this&&this.__createBinding||(Object.create?function(e,t,r,i){void 0===i&&(i=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,i,n)}:function(e,t,r,i){void 0===i&&(i=r),e[i]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||(i=function(e){return i=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},i(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=i(e),a=0;a<r.length;a++)"default"!==r[a]&&n(t,e,r[a]);return s(t,e),t});Object.defineProperty(t,"__esModule",{value:!0});const o=a(r(562)),c=r(673),u=r(117),d=r(931),p=r(185);class l extends c.SettingsMixinDeviceBase{constructor(e,t){super(e),this.plugin=t,this.initStorage={lastFace:{type:"string",hide:!0},refreshDataInterval:{title:"Refresh frequency in seconds",description:"Define how often the layers should refresh",type:"number",defaultValue:5,onPut:async()=>await this.refreshSettings()},enableDebug:{title:"Enable debug",type:"boolean",immediate:!0},duplicateFromDevice:{title:"Duplicate from device",description:"Duplicate OSD information from another devices enabled on the plugin",type:"device",deviceFilter:p.pluginEnabledFilter,immediate:!0,onPut:async(e,t)=>await this.duplicateFromDevice(t)},refreshOverlays:{title:"Get data from camera",type:"button",onPut:async()=>await this.refreshSettings()}},this.storageSettings=new u.StorageSettings(this,this.initStorage),this.overlays=[],this.settingsLogged={},this.updateOverlayDataFromTemplate=async e=>{const t=this.getLogger(),{overlayId:r,template:i}=e,{devicesKey:n,parserStringKey:s}=(0,p.getTemplateKeys)(i),a=JSON.parse(this.plugin.storage.getItem(n)??"[]");let c=this.plugin.storage.getItem(s)||"";try{for(const e of a){const r=o.default.systemManager.getDeviceById(e);r?c=await this.applyDeviceTemplate(c,r,i):t.log(`Device ${e} not found.`)}}catch(e){t.log("Error parsing template",e)}t.debug(`Updating overlay ${r} with ${c}`),await this.cameraDevice.setVideoTextOverlay(r,{text:this.limitText({overlayId:r,text:c})})},this.updateOverlayData=async e=>{const t=this.getLogger(),{overlayId:r,listenerType:i,data:n}=e;if(!this.cameraDevice.sleeping)try{const e=(0,p.getOverlay)({overlayId:r,storageSettings:this.storageSettings}),{textToUpdate:s,value:a}=(0,p.parseOverlayData)({data:n,listenerType:i,overlay:e,plugin:this.plugin,logger:t});if(null==a&&i===p.ListenerType.Face)return;t.debug(`Setting overlay data ${r}: ${JSON.stringify({listenerType:i,data:n,textToUpdate:s})}`),i===p.ListenerType.Face&&this.storageSettings.putSetting("lastFace",a),s?await this.cameraDevice.setVideoTextOverlay(r,{text:this.limitText({overlayId:r,text:s})}):e.type===p.OverlayType.Disabled&&await this.cameraDevice.setVideoTextOverlay(r,{text:!1})}catch(e){t.error("Error in updateOverlayData",e)}},this.plugin.mixinsMap[this.id]=this,this.cameraDevice=o.default.systemManager.getDeviceById(this.id),setTimeout((async()=>!this.killed&&await this.init()),2e3)}removeListeners(){const e=this.getLogger();try{this.refreshInterval&&clearInterval(this.refreshInterval),this.settingsLogged={}}catch(t){e.error("Error in removeListeners",t)}}async release(){this.killed=!0,this.removeListeners()}getLogger(){const e=this.console;if(!this.logger){const t=(t,r,...i)=>{const n=(new Date).toLocaleString();t&&!this.storageSettings.values.enableDebug||e.log(` ${n} - `,r,...i)};this.logger={log:(e,...r)=>t(!1,e,...r),error:(e,...r)=>t(!1,e,...r),debug:(e,...r)=>t(!0,e,...r)}}return this.logger}async refreshSettings(){const e=this.getLogger();e.log("Refreshing settings"),await this.getOverlayData();const t=(0,p.getOverlaySettings)({storage:this.storageSettings,overlays:this.overlays,logger:e,device:this.cameraDevice,templates:this.plugin.storageSettings.values.templates,onSettingUpdated:this.refreshSettings});this.storageSettings=await(0,p.convertSettingsToStorageSettings)({device:this,dynamicSettings:t,initStorage:this.initStorage}),this.removeListeners(),this.start()}async getMixinSettings(){return this.storageSettings.getSettings()}async putSetting(e,t){const[r,...i]=e.split(":");r===p.osdManagerPrefix?this.storageSettings.putSetting(i.join(":"),t):super.putSetting(e,t)}async putMixinSetting(e,t){this.storageSettings.putSetting(e,t)}async getOverlayData(){const e=this.getLogger();try{if(this.cameraDevice.sleeping)return;const e=await this.cameraDevice.getVideoTextOverlays();this.overlays=Object.entries(e).map((([e,t])=>({id:e,...t})));for(const e of this.overlays){const{currentText:t}=(0,p.getOverlay)({overlayId:e.id,storageSettings:this.storageSettings}),{currentTextKey:r}=(0,p.getOverlayKeys)(e.id);await this.putMixinSetting(r,t)}}catch(t){e.error("Error inr getOverlayData",t)}}async duplicateFromDevice(e){const t=this.getLogger();try{const t=o.default.systemManager.getDeviceById(e);if(t){const r=await t.getVideoTextOverlays();for(const[i,n]of Object.entries(r)){if(!(t.pluginId===this.cameraDevice.pluginId||this.overlays.some((e=>i===e.id))))continue;const{device:r,type:n,regex:s,maxDecimals:a,sensorId:o,sensorName:c,unit:u,text:d,template:l,maxCharacters:g}=(0,p.getOverlay)({overlayId:i,storageSettings:this.plugin.mixinsMap[e].storageSettings}),{deviceKey:m,typeKey:y,regexKey:S,maxDecimalsKey:v,sensorIdKey:h,sensorNameKey:f,unitKey:D,templateKey:b,textKey:x,maxCharactersKey:O}=(0,p.getOverlayKeys)(i);await this.putMixinSetting(m,r),await this.putMixinSetting(y,n),await this.putMixinSetting(S,s),await this.putMixinSetting(h,o),await this.putMixinSetting(f,c),await this.putMixinSetting(D,u),await this.putMixinSetting(b,l),await this.putMixinSetting(x,d),await this.putMixinSetting(v,String(a)),await this.putMixinSetting(O,String(g))}await this.putMixinSetting("duplicateFromDevice",void 0),await this.refreshSettings()}}catch(e){t.error("Error in duplicateFromDevice",e)}}limitText(e){const{overlayId:t,text:r}=e,i=(0,p.getOverlay)({overlayId:t,storageSettings:this.storageSettings}),{maxCharacters:n}=i;return n?r.length<=n?r:`${r.substring(0,n-3)}...`:r}async applyDeviceTemplate(e,t,r){const{getDeviceKeys:i,getSensorKeys:n}=(0,p.getTemplateKeys)(r);if(t.interfaces.includes(o.ScryptedInterface.Sensors)){const{sensorsKey:r}=i(t.id),s=JSON.parse(this.plugin.storage.getItem(r)??"[]");for(const r of s){const i=t.sensors[r],{maxDecimalsKey:s,unitKey:a}=n(r),o=this.plugin.storage.getItem(a),c=this.plugin.storageSettings.getItem(s)??1,u=`{${t.id}.${r}}`,l=o??i?.unit;let g=i?.value;if("number"==typeof g){const e=d.UnitConverter.siToLocal(g,l);g=(0,p.formatValue)(e,c)}e=e.replaceAll(u,String(g))}}else{const r=(0,p.getStrippedNativeId)(t),i=`{${t.id}.${r}}`;let s,a,c=1;if(t.interfaces.includes(o.ScryptedInterface.Thermometer)){const e=n("temperature");c=this.plugin.storageSettings.getItem(e.maxDecimalsKey)??1,s=t.temperature,a=t.temperatureUnit,a===o.TemperatureUnit.F&&(s=9*s/5+32)}else if(t.interfaces.includes(o.ScryptedInterface.HumiditySensor)){const e=n("humidity");c=this.plugin.storageSettings.getItem(e.maxDecimalsKey)??1,s=t.humidity,a="%"}else t.interfaces.includes(o.ScryptedInterface.EntrySensor)?s=(0,p.getEntryText)(t.entryOpen,this.plugin):t.interfaces.includes(o.ScryptedInterface.Lock)?s=(0,p.getLockText)(t.lockState,this.plugin):t.interfaces.includes(o.ScryptedInterface.BinarySensor)&&(s=(0,p.getBinaryText)(t.lockState,this.plugin));if("number"==typeof s){const e=d.UnitConverter.siToLocal(s,a);s=(0,p.formatValue)(e,c)}e=e.replaceAll(i,String(s))}return e}async start(){this.refreshInterval=setInterval((async()=>{const e=this.getLogger();for(const t of this.overlays){const r=t.id,i=(0,p.getOverlay)({overlayId:r,storageSettings:this.storageSettings}),n=i.type;let s,a,c;if(n===p.OverlayType.Device){const t=o.default.systemManager.getDeviceById(i.device);if(t)if(t.interfaces.includes(o.ScryptedInterface.Sensors)){if(i.sensorName){const e=i.sensorId??Object.entries(t.sensors).find((([e,{name:t}])=>t===i.sensorName))?.[0];s=p.ListenerType.Sensors,a=e,c=i.device}}else t.interfaces.includes(o.ScryptedInterface.Thermometer)?(s=p.ListenerType.Temperature,a=o.ScryptedInterface.Thermometer,c=i.device):t.interfaces.includes(o.ScryptedInterface.HumiditySensor)?(s=p.ListenerType.Humidity,a=o.ScryptedInterface.HumiditySensor,c=i.device):t.interfaces.includes(o.ScryptedInterface.Lock)?(s=p.ListenerType.Lock,a=o.ScryptedInterface.Lock,c=i.device):t.interfaces.includes(o.ScryptedInterface.EntrySensor)?(s=p.ListenerType.Entry,a=o.ScryptedInterface.EntrySensor,c=i.device):t.interfaces.includes(o.ScryptedInterface.BinarySensor)&&(s=p.ListenerType.Binary,a=o.ScryptedInterface.BinarySensor,c=i.device);else e.log(`Device ${i.device} not found`)}else n===p.OverlayType.FaceDetection?(s=p.ListenerType.Face,a=o.ScryptedInterface.ObjectDetector,c=this.id):n===p.OverlayType.BatteryLeft&&(s=p.ListenerType.Battery,a=o.ScryptedInterface.Battery,c=this.id);if(this.settingsLogged[r]||(e.log(`Settings for overlay ${r}: ${JSON.stringify({overlay:i,overlayType:n,listenerType:s,listenInterface:a,deviceId:c})}`),this.settingsLogged[r]=!0),s){if(a&&c){const e=o.default.systemManager.getDeviceById(c),t=async e=>await this.updateOverlayData({listenInterface:a,overlayId:r,data:e,listenerType:s});s===p.ListenerType.Sensors?t(e.sensors?.[a]):a===o.ScryptedInterface.Thermometer?t(e.temperature):a===o.ScryptedInterface.HumiditySensor?t(e.humidity):a===o.ScryptedInterface.Lock?t(e.lockState):a===o.ScryptedInterface.EntrySensor?t(e.entryOpen):a===o.ScryptedInterface.BinarySensor?t(e.binaryState):a===o.ScryptedInterface.Battery?t(e.batteryLevel):a===o.ScryptedInterface.ObjectDetector&&t({detections:[{className:"face",label:this.storageSettings.values.lastFace||"-"}]})}}else n===p.OverlayType.Text?this.updateOverlayData({overlayId:r,listenerType:s,data:i.text}):n===p.OverlayType.Disabled?this.updateOverlayData({overlayId:r,listenerType:s,data:""}):n===p.OverlayType.Template&&i.template&&await this.updateOverlayDataFromTemplate({overlayId:r,template:i.template})}}),1e3*this.storageSettings.values.refreshDataInterval)}async init(){const e=this.getLogger();try{await this.refreshSettings()}catch(t){e.error("Error in init",t)}}}t.default=l},927:function(e,t,r){"use strict";var i,n=this&&this.__createBinding||(Object.create?function(e,t,r,i){void 0===i&&(i=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,i,n)}:function(e,t,r,i){void 0===i&&(i=r),e[i]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||(i=function(e){return i=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},i(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=i(e),a=0;a<r.length;a++)"default"!==r[a]&&n(t,e,r[a]);return s(t,e),t}),o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const c=a(r(562)),u=o(r(112)),d=r(185),p=r(117),l=r(931);class g extends c.ScryptedDeviceBase{constructor(e){super(e),this.initStorage={templates:{title:"Templates",description:"Define templates from multiple devices",type:"string",multiple:!0,defaultValue:[],choices:[],combobox:!0,onPut:()=>this.refreshSettings()},lockText:{title:"Locked State Text",type:"string",defaultValue:"Locked",group:"Texts"},unlockText:{title:"Unlocked State Text",type:"string",defaultValue:"Unlocked",group:"Texts"},openText:{title:"Open State Text",type:"string",defaultValue:"Open",group:"Texts"},closedText:{title:"Closed State Text",type:"string",defaultValue:"Closed",group:"Texts"},jammedText:{title:"Jammed State Text",type:"string",defaultValue:"Jammed",group:"Texts"}},this.storageSettings=new p.StorageSettings(this,this.initStorage),this.mixinsMap={},this.refreshSettings().catch()}async refreshSettings(){const e=[],{templates:t}=this.storageSettings.values;for(const r of t){const{devicesKey:t,getSensorKeys:i,getDeviceKeys:n,group:s,parserStringKey:a}=(0,d.getTemplateKeys)(r);e.push({key:t,title:"Device",type:"device",group:s,deviceFilter:d.deviceFilter,multiple:!0,onPut:this.refreshSettings});const o=JSON.parse(this.storage.getItem(t)??"[]"),u=[];for(const t of o){const r=c.default.systemManager.getDeviceById(t);if(r&&r.interfaces.includes(c.ScryptedInterface.Sensors)){const a=r,{sensorsKey:o}=n(t),c=Object.keys(a.sensors??{});e.push({key:o,title:`Available sensors on device "${r.name}"`,description:`Select the sensors to make available on the template. Access it on the parser with "{${t}.sensorName}"`,type:"string",group:s,choices:c,combobox:!0,multiple:!0,onPut:this.refreshSettings});const d=JSON.parse(this.storage.getItem(o)??"[]");for(const t of d){u.push(`{${r.id}.${t}}`);const{maxDecimalsKey:n,unitKey:o}=i(t),c=a.sensors[t],d=c?.unit;if(d){const r=l.UnitConverter.getUnits(d);e.push({key:o,title:"Unit",type:"string",subgroup:t,defaultValue:r[0],group:s,immediate:!0,choices:r})}e.push({key:n,title:"Max Decimals",type:"number",subgroup:t,defaultValue:1,group:s})}}else if(r){const t=(0,d.getStrippedNativeId)(r);if(u.push(`{${r.id}.${t}}`),r.interfaces.includes(c.ScryptedInterface.Thermometer)){const t=r,{maxDecimalsKey:n,unitKey:a}=i("temperature"),o={value:t.temperature,unit:t.temperatureUnit};if(o.unit){const t=l.UnitConverter.getUnits(o.unit);e.push({key:a,title:"Unit",type:"string",subgroup:"temperature",defaultValue:t[0],group:s,immediate:!0,choices:t})}e.push({key:n,title:"Max Decimals",type:"number",subgroup:"temperature",defaultValue:1,group:s})}else if(r.interfaces.includes(c.ScryptedInterface.HumiditySensor)){const t=r,{maxDecimalsKey:n,unitKey:a}=i("humidity");t.humidity;e.push({key:a,title:"Unit",type:"string",subgroup:"humidity",defaultValue:"%",group:s,immediate:!0,choices:["%"]}),e.push({key:n,title:"Max Decimals",type:"number",subgroup:"humidity",defaultValue:1,group:s})}}else this.console.warn(`Device ${t} not found`)}e.push({key:a,title:"Parser",description:`String used to generate the content. Available variables: ${u.join(", ")}`,type:"textarea",group:s})}this.storageSettings=await(0,d.convertSettingsToStorageSettings)({device:this,dynamicSettings:e,initStorage:this.initStorage})}async getSettings(){return this.storageSettings.getSettings()}putSetting(e,t){return this.storageSettings.putSetting(e,t)}async canMixin(e,t){return t.includes(c.ScryptedInterface.VideoTextOverlays)?[c.ScryptedInterface.Settings]:void 0}async getMixin(e,t,r){return new u.default({mixinDevice:e,mixinDeviceInterfaces:t,mixinDeviceState:r,mixinProviderNativeId:this.nativeId,group:"OSD manager",groupKey:d.osdManagerPrefix},this)}async releaseMixin(e,t){await t.release()}}t.default=g},185:function(e,t,r){"use strict";var i,n=this&&this.__createBinding||(Object.create?function(e,t,r,i){void 0===i&&(i=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,i,n)}:function(e,t,r,i){void 0===i&&(i=r),e[i]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||(i=function(e){return i=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},i(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=i(e),a=0;a<r.length;a++)"default"!==r[a]&&n(t,e,r[a]);return s(t,e),t});Object.defineProperty(t,"__esModule",{value:!0}),t.convertSettingsToStorageSettings=t.parseOverlayData=t.getLockText=t.getBinaryText=t.getEntryText=t.formatValue=t.getOverlay=t.getOverlaySettings=t.getOverlayKeys=t.getTemplateKeys=t.getFriendlyTitle=t.ListenerType=t.OverlayType=t.osdManagerPrefix=t.pluginEnabledFilter=t.deviceFilter=void 0,t.getStrippedNativeId=function(e){const t=e.nativeId.split(":");return t.length>1?t[1]:t[0]};const o=a(r(562)),c=r(117),u=r(931);var d,p;t.deviceFilter=`['${o.ScryptedInterface.Thermometer}','${o.ScryptedInterface.HumiditySensor}','${o.ScryptedInterface.Lock}','${o.ScryptedInterface.EntrySensor}','${o.ScryptedInterface.BinarySensor}','${o.ScryptedInterface.Sensors}'].some(elem => interfaces.includes(elem))`,t.pluginEnabledFilter=`interfaces.includes('${o.ScryptedInterface.VideoTextOverlays}')`,t.osdManagerPrefix="osdManager",function(e){e.Disabled="Disabled",e.Text="Text",e.Device="Device",e.Template="Template",e.FaceDetection="FaceDetection",e.BatteryLeft="BatteryLeft"}(d||(t.OverlayType=d={})),function(e){e.Face="Face",e.Humidity="Humidity",e.Temperature="Temperature",e.Lock="Lock",e.Battery="Battery",e.Sleep="Sleep",e.Entry="Entry",e.Sensors="Sensors",e.Interval="Interval",e.Binary="Binary"}(p||(t.ListenerType=p={}));t.getFriendlyTitle=e=>{const{device:t,rawTitle:r}=e;return"@scrypted/amcrest"===t.pluginId?r.replace(/^table\.VideoWidget\[\d+\]\./,""):`Overlay ${r}`};t.getTemplateKeys=e=>({group:`Template: ${e}`,devicesKey:`template:${e}:devices`,scriptKey:`template:${e}:script`,parserStringKey:`template:${e}:parserString`,getSensorKeys:t=>({maxDecimalsKey:`overlay:${e}:${t}:maxDecimals`,unitKey:`overlay:${e}:${t}:unit`}),getDeviceKeys:t=>({sensorsKey:`overlay:${e}:${t}:sensors`})});t.getOverlayKeys=e=>({currentTextKey:`overlay:${e}:currentText`,textKey:`overlay:${e}:text`,typeKey:`overlay:${e}:type`,regexKey:`overlay:${e}:regex`,deviceKey:`overlay:${e}:device`,maxCharactersKey:`overlay:${e}:maxCharacters`,maxDecimalsKey:`overlay:${e}:maxDecimals`,sensorIdKey:`overlay:${e}:sensorId`,sensorNameKey:`overlay:${e}:sensorName`,templateKey:`overlay:${e}:template`,unitKey:`overlay:${e}:unit`});t.getOverlaySettings=e=>{const{storage:r,templates:i,overlays:n,device:s,onSettingUpdated:a,logger:c}=e,p=[];for(const e of n){const n=`${e.id}`,c=(0,t.getFriendlyTitle)({rawTitle:n,device:s}),{deviceKey:l,typeKey:g,regexKey:m,textKey:y,maxCharactersKey:S,maxDecimalsKey:v,sensorNameKey:h,unitKey:f,templateKey:D}=(0,t.getOverlayKeys)(e.id);if(e.readonly){p.push({title:"Readonly",type:"boolean",subgroup:c,value:!0,readonly:!0});continue}const b=r.getItem(g)??d.Text;if(p.push({key:g,title:"Overlay Type",type:"string",choices:Object.values(d),defaultValue:d.Text,subgroup:c,immediate:!0,onPut:a},{key:S,title:"Max Characters",type:"number",subgroup:c,onPut:a}),b===d.Disabled)continue;if(b===d.Template){p.push({key:D,title:"Template",type:"string",subgroup:c,immediate:!0,choices:i,onPut:a});continue}b===d.Text&&p.push({key:y,title:"Text",type:"string",subgroup:c,onPut:a});const x={key:m,title:"Value Regex",description:"Expression to generate the text. ${value} contains the value and ${unit} the unit",type:"string",subgroup:c,placeholder:"${value} ${unit}",defaultValue:"${value} ${unit}",onPut:a},O={key:v,title:"Max Decimals",type:"number",subgroup:c,defaultValue:1,onPut:a};if(b===d.Device){p.push({key:l,title:"Device",type:"device",subgroup:c,deviceFilter:t.deviceFilter,immediate:!0,onPut:a});const e=r.getItem(l),i="string"==typeof e?e:e?.id,n=i?o.default.systemManager.getDeviceById(i):void 0;if(n?.interfaces.includes(o.ScryptedInterface.Sensors)){const e=Object.entries(n.sensors??{}),t=e.map((([e,t])=>t.name)).sort();p.push({key:h,title:"Sensor",type:"string",subgroup:c,immediate:!0,choices:t,onPut:a});const i=r.getItem(h);if(i){const t=e.find((([e,{name:t}])=>t===i));if(t){const{unit:e}=t[1],r=u.UnitConverter.getUnits(e);p.push({key:f,title:"Unit",type:"string",subgroup:c,immediate:!0,choices:r,onPut:a})}}}p.push(x,O)}else b===d.FaceDetection?p.push(x):b===d.BatteryLeft&&p.push(x,O)}return p};t.getOverlay=e=>{const{storageSettings:r,overlayId:i}=e,{currentTextKey:n,deviceKey:s,typeKey:a,regexKey:o,textKey:c,maxCharactersKey:u,maxDecimalsKey:d,sensorIdKey:p,sensorNameKey:l,unitKey:g,templateKey:m}=(0,t.getOverlayKeys)(i),y=r.values[n],S=r.values[a],v=r.values[s]?.id,h=r.values[c];return{currentText:y,device:v,type:S,regex:r.values[o],text:h,maxCharacters:r.values[u],maxDecimals:r.values[d],sensorId:r.values[p],sensorName:r.values[l],unit:r.values[g],template:r.values[m]}};t.formatValue=(e,t)=>{const r=Math.pow(10,t);return Math.floor(Number(e??0)*r)/r};t.getEntryText=(e,t)=>"jammed"===e?t.storageSettings.values.jammedText:e?t.storageSettings.values.openText:t.storageSettings.values.closedText;t.getBinaryText=(e,t)=>e?t.storageSettings.values.openText:t.storageSettings.values.closedText;t.getLockText=(e,t)=>"jammed"===e?t.storageSettings.values.jammedText:e===o.LockState.Locked?t.storageSettings.values.lockText:t.storageSettings.values.unlockText;t.parseOverlayData=e=>{const{listenerType:r,data:i,overlay:n,plugin:s}=e,{regex:a,text:c,device:l,maxDecimals:g}=n,m=l?o.default.systemManager.getDeviceById(l):void 0;let y,S,v;if(r===p.Face)y=i?.detections?.find((e=>"face"===e.className))?.label;else if(r===p.Temperature)S=m.temperatureUnit??o.TemperatureUnit.C,y=i,S===o.TemperatureUnit.F&&(y=9*i/5+32),y=(0,t.formatValue)(y,g);else if(r===p.Humidity)y=(0,t.formatValue)(i,g),S="%";else if(r===p.Battery)y=(0,t.formatValue)(i,g),S="%";else if(r===p.Lock)y=(0,t.getLockText)(i,s);else if(r===p.Entry)y=(0,t.getEntryText)(i,s);else if(r===p.Binary)y=(0,t.getBinaryText)(i,s);else if(r===p.Sensors)if("number"==typeof i)S=n.unit,y=(0,t.formatValue)(u.UnitConverter.siToLocal(i,S),g);else{S=n.unit??i?.unit;const e=u.UnitConverter.siToLocal(i?.value,S);y=(0,t.formatValue)(e,g)}else n.type===d.Text&&(v=c);return null!=y&&a&&(v=a.replace("${value}",y??"").replace("${unit}",S??"")),{textToUpdate:v,value:y}};t.convertSettingsToStorageSettings=async e=>{const{device:t,dynamicSettings:r,initStorage:i}=e,n={};Object.entries(i).forEach((([e,t])=>{t.onPut&&(n[e]=t.onPut)}));const s=await new c.StorageSettings(t,i).getSettings();s.push(...r);const a={};for(const e of s){const{value:r,key:i,onPut:n,...s}=e;a[i]={...s,value:"html"===s.type?r:void 0},e.onPut&&(a[i].onPut=e.onPut.bind(t))}const o=new c.StorageSettings(t,a);return Object.entries(n).forEach((([e,t])=>{o.settings[e].onPut=t})),o}},339:e=>{"use strict";e.exports=require("module")}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var r=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e].call(r.exports,r,r.exports,__webpack_require__),r.exports}__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var __webpack_exports__=__webpack_require__(927),__webpack_export_target__=exports="undefined"==typeof exports?{}:exports;for(var __webpack_i__ in __webpack_exports__)__webpack_export_target__[__webpack_i__]=__webpack_exports__[__webpack_i__];__webpack_exports__.__esModule&&Object.defineProperty(__webpack_export_target__,"__esModule",{value:!0})})();
//# sourceMappingURL=main.nodejs.js.map